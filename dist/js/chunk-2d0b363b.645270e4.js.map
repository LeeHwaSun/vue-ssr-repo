{"version":3,"sources":["webpack:///./src/views/board/skins/contents/Form.vue","webpack:///src/views/board/skins/contents/Form.vue","webpack:///./src/views/board/skins/contents/Form.vue?1481","webpack:///./src/views/board/skins/contents/Form.vue?1e79"],"names":["render","_vm","this","_c","_self","attrs","_v","_s","pageTitle","loading","on","save","form","ref","model","value","valid","callback","$$v","expression","rules","required","label","alphaNum","checkId","id","wr_1","$set","skins","wr_2","wr_title","uploadImage","wr_content","_e","staticRenderFns","components","InputDuplicateCheck","name","title","props","config","access","data","confirmPw","uploadFiles","tags","upImages","isWrite","parentItem","computed","user","table","pid","mounted","destroyed","methods","initForm","wr_reply","wr_parent","user_id","wr_email","wr_name","wr_password","wr_category","wrTags","fileTitle","file","desc","formData","cnt","wr_id","component"],"mappings":"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","file":"js/chunk-2d0b363b.645270e4.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('v-container',{attrs:{\"fluid\":\"\"}},[_c('v-toolbar',[_c('v-toolbar-title',[_vm._v(_vm._s(_vm.pageTitle))]),_c('v-spacer'),_c('v-btn',{attrs:{\"color\":\"primary\",\"loading\":_vm.loading},on:{\"click\":_vm.save}},[_c('v-icon',{attrs:{\"left\":\"\"}},[_vm._v(\"mdi-pencil\")]),_vm._v(\" 저장 \")],1)],1),(_vm.form)?_c('v-form',{ref:\"form\",attrs:{\"lazy-validation\":\"\"},model:{value:(_vm.valid),callback:function ($$v) {_vm.valid=$$v},expression:\"valid\"}},[_c('input-duplicate-check',{ref:\"id\",attrs:{\"label\":\"ID\",\"rules\":[_vm.rules.required({ label: 'ID' }), _vm.rules.alphaNum()],\"cbCheck\":_vm.checkId,\"origin\":_vm.id ? _vm.form.wr_1 : '',\"readonly\":!!_vm.id},model:{value:(_vm.form.wr_1),callback:function ($$v) {_vm.$set(_vm.form, \"wr_1\", $$v)},expression:\"form.wr_1\"}}),_c('v-select',{attrs:{\"label\":\"컨텐츠 스킨\",\"items\":_vm.skins},model:{value:(_vm.form.wr_2),callback:function ($$v) {_vm.$set(_vm.form, \"wr_2\", $$v)},expression:\"form.wr_2\"}}),_c('v-text-field',{attrs:{\"label\":\"제목\",\"counter\":\"120\",\"rules\":[_vm.rules.required({ label: '제목' })]},model:{value:(_vm.form.wr_title),callback:function ($$v) {_vm.$set(_vm.form, \"wr_title\", $$v)},expression:\"form.wr_title\"}}),_c('ez-tiptap',{attrs:{\"editable\":true},on:{\"uploadImage\":_vm.uploadImage},model:{value:(_vm.form.wr_content),callback:function ($$v) {_vm.$set(_vm.form, \"wr_content\", $$v)},expression:\"form.wr_content\"}})],1):_vm._e()],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n    <v-container fluid>\r\n        <v-toolbar>\r\n            <v-toolbar-title>{{ pageTitle }}</v-toolbar-title>\r\n            <v-spacer />\r\n            <v-btn @click=\"save\" color=\"primary\" :loading=\"loading\">\r\n                <v-icon left>mdi-pencil</v-icon>\r\n                저장\r\n            </v-btn>\r\n        </v-toolbar>\r\n\r\n        <v-form v-if=\"form\" ref=\"form\" v-model=\"valid\" lazy-validation>\r\n\r\n            <input-duplicate-check \r\n                ref=\"id\"\r\n                label=\"ID\"\r\n                v-model=\"form.wr_1\"\r\n                :rules=\"[rules.required({ label: 'ID' }), rules.alphaNum()]\"\r\n                :cbCheck=\"checkId\"\r\n                :origin=\"id ? form.wr_1 : ''\"\r\n                :readonly=\"!!id\"\r\n            />\r\n\r\n            <v-select \r\n                label=\"컨텐츠 스킨\"\r\n                v-model=\"form.wr_2\"\r\n                :items=\"skins\"\r\n            />\r\n\r\n            <v-text-field\r\n                label=\"제목\"\r\n                v-model=\"form.wr_title\"\r\n                counter=\"120\"\r\n                :rules=\"[rules.required({ label: '제목' })]\"\r\n            />\r\n\r\n            <ez-tiptap\r\n                :editable=\"true\"\r\n                v-model=\"form.wr_content\"\r\n                @uploadImage=\"uploadImage\"\r\n            />\r\n        </v-form>\r\n    </v-container>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from \"vuex\";\r\nimport validateRules from \"../../../../../util/validateRules\";\r\nimport InputDuplicateCheck from '../../../../components/inputForms/InputDuplicateCheck.vue';\r\n\r\nexport default {\r\n    components : { InputDuplicateCheck },\r\n    name : \"BasicForm\",\r\n    title() {\r\n        return this.pageTitle;\r\n    },\r\n    props : {\r\n        config : Object,\r\n        access : Object,\r\n        id: [String, Number],\r\n    },\r\n    data() {\r\n        return {\r\n            form : null,\r\n            valid : true,\r\n            confirmPw : \"\",\r\n            uploadFiles : Array(this.config.brd_upload_cnt).fill(null),\r\n            tags : [], // TODO : 서버에서 태그 목록을 가져온다.\r\n            loading : false,\r\n            upImages : [],\r\n            isWrite : false, // 작성을 했는지 여부\r\n            parentItem : null, // 부모글\r\n            skins : [],\r\n        };\r\n    },\r\n    computed : {\r\n        ...mapState({\r\n            user : (state) => state.user.user,\r\n        }),\r\n        table() {\r\n            return this.config.brd_table;\r\n        },\r\n        pid() {\r\n            if (this.$route.query.act == 'reply') {\r\n                return this.id;\r\n            } else {\r\n                return 0;\r\n            }\r\n        },\r\n        pageTitle() {\r\n            let title = '';\r\n            if (this.pid) {\r\n                title = ' 게시물 답글 작성';\r\n            } else {\r\n                if (this.id) {\r\n                    title = ' 게시물 수정';\r\n                } else {\r\n                    title = ' 게시물 작성';\r\n                }\r\n            }\r\n            return (\r\n                this.config.brd_subject + title\r\n            );\r\n        },\r\n        rules : () => validateRules,\r\n    },\r\n    mounted() {\r\n        this.init();\r\n        this.fetchSkinList();\r\n    },\r\n    destroyed() {\r\n        // 작성을 완료하지 않고 에디터에서 업로드한 이미지가 있으면 삭제를 요청함\r\n        if (!this.isWrite && this.upImages.length) {\r\n            this.$axios.put(`/api/board/imgCancel/${this.table}`, this.upImages);\r\n        }\r\n    },\r\n    methods : {\r\n        async checkId() {\r\n            const data = await this.$axios.get(`/api/contents/duplicateCheck?wr_1=${this.form.wr_1}`)\r\n            return data;\r\n        },\r\n        async fetchSkinList() {\r\n            const data = await this.$axios.get('/api/contents/skinList');\r\n            this.skins = data;\r\n        },\r\n        async init() {\r\n            if (this.id) {\r\n                const data = await this.$axios.get(`/api/board/detail/${this.table}/${this.id}`);\r\n                if (this.pid) { // 부모글의 답글\r\n                    this.initForm();\r\n                    this.form.wr_category = data.wr_category;\r\n                    this.parentItem = data;\r\n                } else { // 수정\r\n                    this.form = data;\r\n                }\r\n                this.form.wr_password = \"\";\r\n            } else { // 새글\r\n                this.initForm();\r\n            }\r\n        },\r\n        initForm() {\r\n            const form = {\r\n                wr_reply : 0,\r\n                wr_parent : this.pid, // TODO : 나중에 답글 작성할 때 부모글 아이들 넣음\r\n                user_id : this.user ? this.user.user_id : 0, // 0이면 비회원 글 작성임\r\n                wr_email : this.user ? this.user.user_email : \"\",\r\n                wr_name : this.user ? this.user.user_name : \"\",\r\n                wr_password : \"\",\r\n                wr_category : this.$route.query.ca || this.config.brd_category[0] || \"\", // TODO : 링크할 때 카테고리 정보를 넘긴다\r\n                wr_title : \"\",\r\n                wr_content : \"\",\r\n                wrTags : [],\r\n                //wrImgs : [],\r\n                //wrFiles : [],\r\n            };\r\n            for (let i = 1; i <= 10; i++) {\r\n                form[`wr_${i}`] = \"\";\r\n            }\r\n            form.wr_2 = 'basic';\r\n            this.form = form;\r\n        },\r\n        fileTitle(i) {\r\n            // TODO : 수정 할 때 올렸던 파일 이름 요기서 사용할꺼에요\r\n            if (this.form.wrFiles) {\r\n                const wrFile = this.form.wrFiles[i - 1];\r\n                return wrFile && !wrFile.remove ? wrFile.brd_file_name : `첨부파일 ${i}`;\r\n            } else {\r\n                return `첨부파일 ${i}`;   \r\n            }\r\n            \r\n        },\r\n        async uploadImage({ file, desc, callback }) {\r\n            const formData = new FormData();\r\n            formData.append(\"upFile\", file);\r\n            formData.append(\"brd_file_desc\", desc);\r\n            const data = await this.$axios.post(`/api/board/imageUpload/${this.table}`, formData);\r\n            this.upImages.push(data);\r\n            callback(`/upload/${this.table}/${data.brd_file_src}`);\r\n        },\r\n        async save() {\r\n            this.$refs.form.validate();\r\n            await this.$nextTick();\r\n            if (!this.valid) return;\r\n            if (!this.$refs.id.validate()) return;\r\n            \r\n            this.loading = true;\r\n\r\n            const formData = new FormData();\r\n            const keys = Object.keys(this.form);\r\n\r\n            for (const key of keys) {\r\n                if (typeof this.form[key] === \"object\") {\r\n                    formData.append(key, JSON.stringify(this.form[key]));\r\n                } else {\r\n                    formData.append(key, this.form[key]);\r\n                }\r\n            }\r\n\r\n            // 작성시 토큰이 있는 경우 토큰을 삽입\r\n            if (this.$route.query.token) {\r\n                formData.append('token', this.$route.query.token);\r\n            }\r\n\r\n            let cnt = 0;\r\n            for (let i = 0; i < this.config.brd_upload_cnt; i++) {\r\n                if (this.uploadFiles[i] != null) {\r\n                    formData.append(`upFiles[${cnt}`, this.uploadFiles[i]);\r\n                    cnt++;\r\n                }\r\n            }\r\n\r\n            // 에디터에서 업로드한 이미지\r\n            formData.append('upImages', JSON.stringify(this.upImages));\r\n\r\n            let wr_id;\r\n            if (this.id && !this.pid) {\r\n                wr_id = await this.update(formData);\r\n            } else {\r\n                wr_id = await this.insert(formData);\r\n            }\r\n\r\n            // 글 작성이 잘 끝났으면\r\n            if (wr_id) {\r\n                this.isWrite = true;\r\n                this.$router.push(`/board/${this.table}`);\r\n            }\r\n\r\n            this.loading = false;\r\n        },\r\n        async insert(formData) {\r\n            const data = await this.$axios.post(`/api/board/write/${this.table}`, formData);\r\n            return data.wr_id;\r\n        },\r\n        async update(formData) {\r\n            const data = await this.$axios.put(`/api/board/write/${this.table}/${this.id}`, formData);\r\n            return data.wr_id;\r\n        },\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Form.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Form.vue?vue&type=template&id=1c2d94f8&\"\nimport script from \"./Form.vue?vue&type=script&lang=js&\"\nexport * from \"./Form.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}